#!/usr/bin/env python3
"""
azs - unified CLI for Azure SQL tools in this repo

Usage:
  azs <command> [args...]

Commands:
  export   Run azure_sql_export.py
  import   Run azure_sql_import.py
  compare  Run azure_sql_compare.py
  copy     Run azure_sql_copy.py
  web      Run azure_sql_web.py

Examples:
  azs export -c config.yaml -o ./exports
  azs import -c config.yaml ./exports
  azs compare -c config.yaml --import-dir ./exports
  azs copy -c config.yaml --tables table1,table2
  azs web
"""

import sys
import subprocess
from pathlib import Path


def print_usage() -> None:
    print(__doc__.strip())


def main() -> int:
    if len(sys.argv) < 2 or sys.argv[1] in {"-h", "--help", "help"}:
        # If user asked help for a specific command: azs help <cmd>
        if len(sys.argv) == 3 and sys.argv[1] in {"help"}:
            cmd = sys.argv[2]
        else:
            print_usage()
            return 0
    else:
        cmd = sys.argv[1]

    script_dir = Path(__file__).resolve().parent
    modules = {
        "export": "pyazs.export",
        "import": "pyazs.imp",
        "compare": "pyazs.compare",
        "copy": "pyazs.copy",
        "web": "pyazs.web",
        "migrate": "pyazs.migrate",
        "sync": "pyazs.sync",
    }

    if cmd not in modules:
        print(f"Unknown command: {cmd}\n")
        print_usage()
        return 2

    # Forward remaining args to the target module via -m
    forward_args = sys.argv[2:] if len(sys.argv) > 2 else []
    proc = subprocess.run([sys.executable, "-m", modules[cmd], *forward_args])
    return proc.returncode


if __name__ == "__main__":
    raise SystemExit(main())


